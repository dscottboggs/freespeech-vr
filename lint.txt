************* Module freespeech
W:896, 0: TODO ^^ (fixme)
W:897, 0: FIXME ^^ (fixme)
C: 61, 0: No space allowed after bracket
loglvl = [ "LOG", "ERROR", "SUBPROCESS_MESSAGE", "DEBUG", "WARN" ]
         ^ (bad-whitespace)
C: 61, 0: No space allowed before bracket
loglvl = [ "LOG", "ERROR", "SUBPROCESS_MESSAGE", "DEBUG", "WARN" ]
                                                                 ^ (bad-whitespace)
C: 62, 0: Exactly one space required before assignment
refdir  = os.path.join("/", "usr", "share", "freespeech")
        ^ (bad-whitespace)
C: 71, 0: Exactly one space required around assignment
ref_files={
         ^ (bad-whitespace)
C: 79, 0: Exactly one space required around assignment
conf_files={
          ^ (bad-whitespace)
C:114, 0: Exactly one space required around assignment
        self.open_filename=''
                          ^ (bad-whitespace)
C:117, 0: Exactly one space required after comma
        self.check_file(conf_files['dic'],      ref_files['dic'])
                                         ^ (bad-whitespace)
C:118, 0: Exactly one space required after comma
        self.check_file(conf_files['arpa'],     ref_files['lm'])
                                          ^ (bad-whitespace)
C:121, 0: Exactly one space required after comma
        if not os.access("/usr/tmp/",os.W_OK):
                                    ^ (bad-whitespace)
C:123, 0: Exactly one space required after comma
                subprocess.call("sudo ln -s /tmp /usr/tmp",shell=True,executable='/bin/bash')
                                                          ^ (bad-whitespace)
C:123, 0: Exactly one space required after comma
                subprocess.call("sudo ln -s /tmp /usr/tmp",shell=True,executable='/bin/bash')
                                                                     ^ (bad-whitespace)
C:124, 0: Exactly one space required after comma
                if os.access("/usr/tmp",os.W_OK):
                                       ^ (bad-whitespace)
C:313, 0: Exactly one space required around assignment
        me.checkbox=Gtk.CheckButton("Restore Defaults")
                   ^ (bad-whitespace)
C:316, 0: Exactly one space required around assignment
        me.liststore=Gtk.ListStore(str, str)
                    ^ (bad-whitespace)
C:318, 0: Exactly one space required around assignment
        me.tree=Gtk.TreeView(me.liststore)
               ^ (bad-whitespace)
C:329, 0: Exactly one space required after comma
        column = Gtk.TreeViewColumn("Spoken command",editable,text=0)
                                                    ^ (bad-whitespace)
C:329, 0: Exactly one space required after comma
        column = Gtk.TreeViewColumn("Spoken command",editable,text=0)
                                                             ^ (bad-whitespace)
C:332, 0: Exactly one space required after comma
        column = Gtk.TreeViewColumn("What it does",fixed,text=1)
                                                  ^ (bad-whitespace)
C:332, 0: Exactly one space required after comma
        column = Gtk.TreeViewColumn("What it does",fixed,text=1)
                                                        ^ (bad-whitespace)
C:344, 0: Exactly one space required after comma
        for command_name,command in iter(self.cmds):
                        ^ (bad-whitespace)
C:346, 0: Exactly one space required after comma
                me.liststore.append([command_name,phrase])
                                                 ^ (bad-whitespace)
C:347, 0: Exactly one space required after comma
                print(command_name,phrase,sep="  --  ")
                                  ^ (bad-whitespace)
C:347, 0: Exactly one space required after comma
                print(command_name,phrase,sep="  --  ")
                                         ^ (bad-whitespace)
C:355, 0: Exactly one space required after comma
            no,msg = e.args
              ^ (bad-whitespace)
C:356, 0: No space allowed around keyword argument assignment
            self.err.show(errormsg = no + ": " + msg
                                   ^ (bad-whitespace)
C:363, 0: Exactly one space required after comma
            no,msg = e.args
              ^ (bad-whitespace)
C:364, 0: No space allowed around keyword argument assignment
            self.err.show(errormsg = no + ": " + msg
                                   ^ (bad-whitespace)
C:371, 0: Exactly one space required around assignment
                self.cmds=json.loads(f.read())
                         ^ (bad-whitespace)
C:373, 0: Exactly one space required after comma
            no,msg = e.args
              ^ (bad-whitespace)
C:374, 0: No space allowed around keyword argument assignment
            self.err.show(errormsg = no + ": " + msg + "\n...Occurred in read_prefs()",
                                   ^ (bad-whitespace)
C:382, 0: Exactly one space required after comma
            if (os.access(conf_files["commands.json"],os.R_OK)):
                                                     ^ (bad-whitespace)
C:383, 0: Exactly one space required after comma
                shutil.copy(conf_files["commands.json"],os.path.join(confdir,"commands.json.bak"))
                                                       ^ (bad-whitespace)
C:383, 0: Exactly one space required after comma
                shutil.copy(conf_files["commands.json"],os.path.join(confdir,"commands.json.bak"))
                                                                            ^ (bad-whitespace)
C:385, 0: Line too long (102/100) (line-too-long)
C:388, 0: Exactly one space required around comparison
            if event!=Gtk.ResponseType.OK:
                    ^^ (bad-whitespace)
C:398, 0: Exactly one space required around assignment
        liststore=self.prefsdialog.liststore
                 ^ (bad-whitespace)
C:400, 0: Exactly one space required after comma
        old_text = liststore.get_value(treeiter,0)
                                               ^ (bad-whitespace)
C:402, 0: Exactly one space required after comma
            liststore.set_value(treeiter,0,new_text)
                                        ^ (bad-whitespace)
C:402, 0: Exactly one space required after comma
            liststore.set_value(treeiter,0,new_text)
                                          ^ (bad-whitespace)
C:403, 0: Exactly one space required around assignment
            self.cmds[new_text]=self.cmds[old_text]
                               ^ (bad-whitespace)
C:409, 0: Exactly one space required around assignment
        me=self.prefsdialog
          ^ (bad-whitespace)
C:425, 0: No space allowed around keyword argument assignment
            corpus = self.prepare_corpus(txt=self.textbuf, bounds=self.textbuf.get_bounds())
                   ^ (bad-whitespace)
C:435, 0: Exactly one space required after comma
            num,msg=e.args
               ^ (bad-whitespace)
C:435, 0: Exactly one space required around assignment
            num,msg=e.args
                   ^ (bad-whitespace)
C:438, 0: Exactly one space required after comma
            num,msg=e.args
               ^ (bad-whitespace)
C:438, 0: Exactly one space required around assignment
            num,msg=e.args
                   ^ (bad-whitespace)
C:442, 0: Exactly one space required around comparison
        if platform.system()=='Windows':
                            ^^ (bad-whitespace)
C:458, 0: Exactly one space required after comma
            num,msg = e.args
               ^ (bad-whitespace)
C:459, 0: No space allowed after keyword argument assignment
            self.err.show(errormsg= 'Trouble writing ' + conf_files["vocab"] + ": " + msg,
                                  ^ (bad-whitespace)
C:468, 0: Exactly one space required after comma
            num,msg = e.args
               ^ (bad-whitespace)
C:469, 0: No space allowed after keyword argument assignment
            self.err.show(errormsg= 'Trouble writing ' + conf_files["idngram"] + ": " + msg,
                                  ^ (bad-whitespace)
C:481, 0: Exactly one space required after comma
            num,msg = e.args
               ^ (bad-whitespace)
C:498, 0: Exactly one space required around assignment
        response=self.file_chooser.run()
                ^ (bad-whitespace)
C:499, 0: Exactly one space required around comparison
        if response==Gtk.ResponseType.OK:
                   ^^ (bad-whitespace)
C:500, 0: Exactly one space required around assignment
            self.open_filename=self.file_chooser.get_filename()
                              ^ (bad-whitespace)
C:509, 0: Exactly one space required around assignment
        self.open_filename=''
                          ^ (bad-whitespace)
C:515, 0: Exactly one space required around assignment
            response=self.file_chooser.run()
                    ^ (bad-whitespace)
C:516, 0: Exactly one space required around comparison
            if response==Gtk.ResponseType.OK:
                       ^^ (bad-whitespace)
C:517, 0: Exactly one space required around assignment
                self.open_filename=self.file_chooser.get_filename()
                                  ^ (bad-whitespace)
C:527, 0: Exactly one space required around assignment
        me=self.prefsdialog
          ^ (bad-whitespace)
C:618, 0: Exactly one space required after comma
            line = re.sub(r'--',          r'--dash',                  line)
                               ^ (bad-whitespace)
C:618, 0: Exactly one space required after comma
            line = re.sub(r'--',          r'--dash',                  line)
                                                   ^ (bad-whitespace)
C:619, 0: Exactly one space required after comma
            line = re.sub(r'- ',          r'-hyphen ',                line)
                               ^ (bad-whitespace)
C:619, 0: Exactly one space required after comma
            line = re.sub(r'- ',          r'-hyphen ',                line)
                                                     ^ (bad-whitespace)
C:620, 0: Exactly one space required after comma
            line = re.sub(r'`',           r'`agrave',                 line)
                              ^ (bad-whitespace)
C:620, 0: Exactly one space required after comma
            line = re.sub(r'`',           r'`agrave',                 line)
                                                    ^ (bad-whitespace)
C:621, 0: Exactly one space required after comma
            line = re.sub(r'=',           r'=equals-sign',            line)
                              ^ (bad-whitespace)
C:621, 0: Exactly one space required after comma
            line = re.sub(r'=',           r'=equals-sign',            line)
                                                         ^ (bad-whitespace)
C:622, 0: Exactly one space required after comma
            line = re.sub(r'>',           r'>greater-than-symbol',    line)
                              ^ (bad-whitespace)
C:622, 0: Exactly one space required after comma
            line = re.sub(r'>',           r'>greater-than-symbol',    line)
                                                                 ^ (bad-whitespace)
C:623, 0: Exactly one space required after comma
            line = re.sub(r'<',           r'<less-than-symbol',       line)
                              ^ (bad-whitespace)
C:623, 0: Exactly one space required after comma
            line = re.sub(r'<',           r'<less-than-symbol',       line)
                                                              ^ (bad-whitespace)
C:624, 0: Exactly one space required after comma
            line = re.sub(r'\|',          r'\|pipe-symbol',           line)
                               ^ (bad-whitespace)
C:624, 0: Exactly one space required after comma
            line = re.sub(r'\|',          r'\|pipe-symbol',           line)
                                                          ^ (bad-whitespace)
C:625, 0: Exactly one space required after comma
            line = re.sub(r'\. \. \.',    r'...ellipsis',             line)
                                     ^ (bad-whitespace)
C:625, 0: Exactly one space required after comma
            line = re.sub(r'\. \. \.',    r'...ellipsis',             line)
                                                        ^ (bad-whitespace)
C:626, 0: Exactly one space required after comma
            line = re.sub(r' \. ',        r' .dot ',                  line)
                                 ^ (bad-whitespace)
C:626, 0: Exactly one space required after comma
            line = re.sub(r' \. ',        r' .dot ',                  line)
                                                   ^ (bad-whitespace)
C:627, 0: Exactly one space required after comma
            line = re.sub(r'\.$',         r'.period',                 line)
                                ^ (bad-whitespace)
C:627, 0: Exactly one space required after comma
            line = re.sub(r'\.$',         r'.period',                 line)
                                                    ^ (bad-whitespace)
C:628, 0: Exactly one space required after comma
            line = re.sub(r',',           r',comma',                  line)
                              ^ (bad-whitespace)
C:628, 0: Exactly one space required after comma
            line = re.sub(r',',           r',comma',                  line)
                                                   ^ (bad-whitespace)
C:629, 0: Exactly one space required after comma
            line = re.sub(r':',           r':colon',                  line)
                              ^ (bad-whitespace)
C:629, 0: Exactly one space required after comma
            line = re.sub(r':',           r':colon',                  line)
                                                   ^ (bad-whitespace)
C:630, 0: Exactly one space required after comma
            line = re.sub(r'\?',          r'?question-mark',          line)
                               ^ (bad-whitespace)
C:630, 0: Exactly one space required after comma
            line = re.sub(r'\?',          r'?question-mark',          line)
                                                           ^ (bad-whitespace)
C:631, 0: Exactly one space required after comma
            line = re.sub(r'"',           r'"quote',                  line)
                              ^ (bad-whitespace)
C:631, 0: Exactly one space required after comma
            line = re.sub(r'"',           r'"quote',                  line)
                                                   ^ (bad-whitespace)
C:632, 0: Exactly one space required after comma
            line = re.sub(r'([\w]) \' s', r"\1's",                    line)
                                                 ^ (bad-whitespace)
C:633, 0: Exactly one space required after comma
            line = re.sub(r" '",          r" 'single-quote",          line)
                               ^ (bad-whitespace)
C:633, 0: Exactly one space required after comma
            line = re.sub(r" '",          r" 'single-quote",          line)
                                                           ^ (bad-whitespace)
C:634, 0: Exactly one space required after comma
            line = re.sub(r'\(',          r'(left-paren',             line)
                               ^ (bad-whitespace)
C:634, 0: Exactly one space required after comma
            line = re.sub(r'\(',          r'(left-paren',             line)
                                                        ^ (bad-whitespace)
C:635, 0: Exactly one space required after comma
            line = re.sub(r'\)',          r')right-paren',            line)
                               ^ (bad-whitespace)
C:635, 0: Exactly one space required after comma
            line = re.sub(r'\)',          r')right-paren',            line)
                                                         ^ (bad-whitespace)
C:636, 0: Exactly one space required after comma
            line = re.sub(r'\[',          r'[left-bracket',           line)
                               ^ (bad-whitespace)
C:636, 0: Exactly one space required after comma
            line = re.sub(r'\[',          r'[left-bracket',           line)
                                                          ^ (bad-whitespace)
C:637, 0: Exactly one space required after comma
            line = re.sub(r'\]',          r']right-bracket',          line)
                               ^ (bad-whitespace)
C:637, 0: Exactly one space required after comma
            line = re.sub(r'\]',          r']right-bracket',          line)
                                                           ^ (bad-whitespace)
C:638, 0: Exactly one space required after comma
            line = re.sub(r'{',           r'{left-brace',             line)
                              ^ (bad-whitespace)
C:638, 0: Exactly one space required after comma
            line = re.sub(r'{',           r'{left-brace',             line)
                                                        ^ (bad-whitespace)
C:639, 0: Exactly one space required after comma
            line = re.sub(r'}',           r'}right-brace',            line)
                              ^ (bad-whitespace)
C:639, 0: Exactly one space required after comma
            line = re.sub(r'}',           r'}right-brace',            line)
                                                         ^ (bad-whitespace)
C:640, 0: Exactly one space required after comma
            line = re.sub(r'!',           r'!exclamation-point',      line)
                              ^ (bad-whitespace)
C:640, 0: Exactly one space required after comma
            line = re.sub(r'!',           r'!exclamation-point',      line)
                                                               ^ (bad-whitespace)
C:641, 0: Exactly one space required after comma
            line = re.sub(r';',           r';semi-colon',             line)
                              ^ (bad-whitespace)
C:641, 0: Exactly one space required after comma
            line = re.sub(r';',           r';semi-colon',             line)
                                                        ^ (bad-whitespace)
C:642, 0: Exactly one space required after comma
            line = re.sub(r'/',           r'/slash',                  line)
                              ^ (bad-whitespace)
C:642, 0: Exactly one space required after comma
            line = re.sub(r'/',           r'/slash',                  line)
                                                   ^ (bad-whitespace)
C:643, 0: Exactly one space required after comma
            line = re.sub(r'%',           r'%percent',                line)
                              ^ (bad-whitespace)
C:643, 0: Exactly one space required after comma
            line = re.sub(r'%',           r'%percent',                line)
                                                     ^ (bad-whitespace)
C:644, 0: Exactly one space required after comma
            line = re.sub(r'#',           r'#sharp-sign',             line)
                              ^ (bad-whitespace)
C:644, 0: Exactly one space required after comma
            line = re.sub(r'#',           r'#sharp-sign',             line)
                                                        ^ (bad-whitespace)
C:645, 0: Exactly one space required after comma
            line = re.sub(r'@',           r'@at-symbol',              line)
                              ^ (bad-whitespace)
C:645, 0: Exactly one space required after comma
            line = re.sub(r'@',           r'@at-symbol',              line)
                                                       ^ (bad-whitespace)
C:646, 0: Exactly one space required after comma
            line = re.sub(r'\*',          r'*asterisk',               line)
                               ^ (bad-whitespace)
C:646, 0: Exactly one space required after comma
            line = re.sub(r'\*',          r'*asterisk',               line)
                                                      ^ (bad-whitespace)
C:647, 0: Exactly one space required after comma
            line = re.sub(r'\^',          r'^circumflex',             line)
                               ^ (bad-whitespace)
C:647, 0: Exactly one space required after comma
            line = re.sub(r'\^',          r'^circumflex',             line)
                                                        ^ (bad-whitespace)
C:648, 0: Exactly one space required after comma
            line = re.sub(r'&',           r'&ampersand',              line)
                              ^ (bad-whitespace)
C:648, 0: Exactly one space required after comma
            line = re.sub(r'&',           r'&ampersand',              line)
                                                       ^ (bad-whitespace)
C:649, 0: Exactly one space required after comma
            line = re.sub(r'\$',          r'$dollar-sign',            line)
                               ^ (bad-whitespace)
C:649, 0: Exactly one space required after comma
            line = re.sub(r'\$',          r'$dollar-sign',            line)
                                                         ^ (bad-whitespace)
C:650, 0: Exactly one space required after comma
            line = re.sub(r'\+',          r'+plus-symbol',            line)
                               ^ (bad-whitespace)
C:650, 0: Exactly one space required after comma
            line = re.sub(r'\+',          r'+plus-symbol',            line)
                                                         ^ (bad-whitespace)
C:651, 0: Exactly one space required after comma
            line = re.sub(r'§',           r'§section-sign',           line)
                              ^ (bad-whitespace)
C:651, 0: Exactly one space required after comma
            line = re.sub(r'§',           r'§section-sign',           line)
                                                          ^ (bad-whitespace)
C:652, 0: Exactly one space required after comma
            line = re.sub(r'¶',           r'¶paragraph-sign',         line)
                              ^ (bad-whitespace)
C:652, 0: Exactly one space required after comma
            line = re.sub(r'¶',           r'¶paragraph-sign',         line)
                                                            ^ (bad-whitespace)
C:653, 0: Exactly one space required after comma
            line = re.sub(r'¼',           r'¼and-a-quarter',          line)
                              ^ (bad-whitespace)
C:653, 0: Exactly one space required after comma
            line = re.sub(r'¼',           r'¼and-a-quarter',          line)
                                                           ^ (bad-whitespace)
C:654, 0: Exactly one space required after comma
            line = re.sub(r'½',           r'½and-a-half',             line)
                              ^ (bad-whitespace)
C:654, 0: Exactly one space required after comma
            line = re.sub(r'½',           r'½and-a-half',             line)
                                                        ^ (bad-whitespace)
C:655, 0: Exactly one space required after comma
            line = re.sub(r'¾',           r'¾and-three-quarters',     line)
                              ^ (bad-whitespace)
C:655, 0: Exactly one space required after comma
            line = re.sub(r'¾',           r'¾and-three-quarters',     line)
                                                                ^ (bad-whitespace)
C:656, 0: Exactly one space required after comma
            line = re.sub(r'¿',           r'¿inverted-question-mark', line)
                              ^ (bad-whitespace)
C:657, 0: Exactly one space required after comma
            line = re.sub(r'×',           r'×multiplication-sign',    line)
                              ^ (bad-whitespace)
C:657, 0: Exactly one space required after comma
            line = re.sub(r'×',           r'×multiplication-sign',    line)
                                                                 ^ (bad-whitespace)
C:658, 0: Exactly one space required after comma
            line = re.sub(r'÷',           r'÷division-sign',          line)
                              ^ (bad-whitespace)
C:658, 0: Exactly one space required after comma
            line = re.sub(r'÷',           r'÷division-sign',          line)
                                                           ^ (bad-whitespace)
C:659, 0: Exactly one space required after comma
            line = re.sub(r'° ',          r'°degree-sign ',           line)
                               ^ (bad-whitespace)
C:659, 0: Exactly one space required after comma
            line = re.sub(r'° ',          r'°degree-sign ',           line)
                                                          ^ (bad-whitespace)
C:660, 0: Exactly one space required after comma
            line = re.sub(r'©',           r'©copyright-sign',         line)
                              ^ (bad-whitespace)
C:660, 0: Exactly one space required after comma
            line = re.sub(r'©',           r'©copyright-sign',         line)
                                                            ^ (bad-whitespace)
C:661, 0: Exactly one space required after comma
            line = re.sub(r'™',           r'™trademark-sign',         line)
                              ^ (bad-whitespace)
C:661, 0: Exactly one space required after comma
            line = re.sub(r'™',           r'™trademark-sign',         line)
                                                            ^ (bad-whitespace)
C:662, 0: Exactly one space required after comma
            line = re.sub(r'®',           r'®registered-sign',      line)
                              ^ (bad-whitespace)
C:662, 0: Exactly one space required after comma
            line = re.sub(r'®',           r'®registered-sign',      line)
                                                             ^ (bad-whitespace)
C:663, 0: Exactly one space required after comma
            line = re.sub(r'_',           r'_underscore',             line)
                              ^ (bad-whitespace)
C:663, 0: Exactly one space required after comma
            line = re.sub(r'_',           r'_underscore',             line)
                                                        ^ (bad-whitespace)
C:664, 0: Exactly one space required after comma
            line = re.sub(r'\\',          r'\backslash',              line)
                               ^ (bad-whitespace)
C:664, 0: Exactly one space required after comma
            line = re.sub(r'\\',          r'\backslash',              line)
                                                       ^ (bad-whitespace)
C:665, 0: Exactly one space required after comma
            line = re.sub(r'^(.)',        r'<s> \1',                  line)
                                 ^ (bad-whitespace)
C:665, 0: Exactly one space required after comma
            line = re.sub(r'^(.)',        r'<s> \1',                  line)
                                                   ^ (bad-whitespace)
C:666, 0: Exactly one space required after comma
            line = re.sub(r'(.)$',        r'\1 </s>',                 line)
                                 ^ (bad-whitespace)
C:666, 0: Exactly one space required after comma
            line = re.sub(r'(.)$',        r'\1 </s>',                 line)
                                                    ^ (bad-whitespace)
C:674, 0: Exactly one space required before assignment
        text    = re.sub(r'(\w[.:;?!])\s+(\w)', r'\1\n\2', text)
                ^ (bad-whitespace)
C:675, 0: Exactly one space required before assignment
        text    = re.sub(r'\n+', r'\n', text)
                ^ (bad-whitespace)
C:676, 0: Exactly one space required before assignment
        corpus  = re.split(r'\n', text)
                ^ (bad-whitespace)
C:850, 0: Exactly one space required after comma
                    b = "".join(["\b" for x in range(0,len(scratch))])
                                                      ^ (bad-whitespace)
C:881, 0: Exactly one space required before assignment
    title       = "Error"
                ^ (bad-whitespace)
C:882, 0: Exactly one space required before assignment
    parent      = None
                ^ (bad-whitespace)
C:884, 0: Exactly one space required before assignment
    buttons     = 0
                ^ (bad-whitespace)
C:885, 0: Exactly one space required before assignment
    label       = Gtk.Label("Nice label")
                ^ (bad-whitespace)
C:923, 0: Exactly one space required after comma
    def set_title(self,title="Error"):
                      ^ (bad-whitespace)
C:925, 0: Exactly one space required after comma
    def set_buttons(self, buttons=(Gtk.STOCK_OK,Gtk.ResponseType.OK)):
                                               ^ (bad-whitespace)
C:927, 0: Exactly one space required after comma
    def set_flags(self,flags=Gtk.DialogFlags.MODAL):
                      ^ (bad-whitespace)
C:968, 0: Line too long (108/100) (line-too-long)
C:970, 0: Line too long (119/100) (line-too-long)
C:971, 0: Line too long (103/100) (line-too-long)
C:972, 0: Line too long (123/100) (line-too-long)
W:974, 0: Bad indentation. Found 16 spaces, expected 12 (bad-indentation)
C:976, 0: Line too long (103/100) (line-too-long)
C:982, 0: Line too long (136/100) (line-too-long)
C:988, 0: Line too long (110/100) (line-too-long)
C:994, 0: Line too long (118/100) (line-too-long)
C:1000, 0: Line too long (129/100) (line-too-long)
C:1003, 0: Line too long (111/100) (line-too-long)
C:1007, 0: Line too long (174/100) (line-too-long)
C:1012, 0: Line too long (115/100) (line-too-long)
C:1013, 0: Line too long (128/100) (line-too-long)
C:1016, 0: Line too long (151/100) (line-too-long)
C:1020, 0: Line too long (164/100) (line-too-long)
C:1038, 0: Line too long (160/100) (line-too-long)
C:1042, 0: Line too long (160/100) (line-too-long)
C:  1, 0: Too many lines in module (1070/1000) (too-many-lines)
C: 48, 0: Import "from gi.repository import GObject, Gtk" should be placed at the top of the module (wrong-import-position)
W: 51, 0: Wildcard import send_key (wildcard-import)
C: 51, 0: Import "from send_key import *" should be placed at the top of the module (wrong-import-position)
C: 61, 0: Invalid constant name "loglvl" (invalid-name)
C: 62, 0: Invalid constant name "refdir" (invalid-name)
C: 63, 0: Invalid constant name "confdir" (invalid-name)
C: 64, 0: Invalid constant name "pocketsphinx_files_dir" (invalid-name)
C: 71, 0: Invalid constant name "ref_files" (invalid-name)
C: 79, 0: Invalid constant name "conf_files" (invalid-name)
R: 91, 0: Too many instance attributes (24/7) (too-many-instance-attributes)
C:111, 4: Missing method docstring (missing-docstring)
E:134,44: Too many positional arguments for function call (too-many-function-args)
C:170, 4: Missing method docstring (missing-docstring)
C:178,16: Invalid variable name "ENGINE_" (invalid-name)
W:178,16: Unused variable 'ENGINE_' (unused-variable)
R:179, 4: Method could be a function (no-self-use)
C:194, 4: Missing method docstring (missing-docstring)
C:237, 4: Missing method docstring (missing-docstring)
C:243, 4: Missing method docstring (missing-docstring)
W:265,15: Catching too general exception Exception (broad-except)
C:265, 8: Invalid variable name "e" (invalid-name)
C:299, 8: Invalid variable name "me" (invalid-name)
E:312, 8: Instance of 'int' has no 'pack_start' member (no-member)
E:315, 8: Instance of 'int' has no 'pack_start' member (no-member)
W:326,38: Use of eval (eval-used)
E:334, 8: Instance of 'int' has no 'pack_end' member (no-member)
C:340, 4: Invalid argument name "me" (invalid-name)
W:340,31: Unused argument 'event' (unused-argument)
W:354,15: Catching too general exception Exception (broad-except)
C:352,83: Invalid variable name "f" (invalid-name)
C:354, 8: Invalid variable name "e" (invalid-name)
C:355,12: Invalid variable name "no" (invalid-name)
W:362,15: Catching too general exception Exception (broad-except)
C:359,83: Invalid variable name "f" (invalid-name)
C:360,30: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
C:362, 8: Invalid variable name "e" (invalid-name)
C:363,12: Invalid variable name "no" (invalid-name)
C:367, 4: Missing method docstring (missing-docstring)
C:370,83: Invalid variable name "f" (invalid-name)
C:372, 8: Invalid variable name "e" (invalid-name)
C:373,12: Invalid variable name "no" (invalid-name)
C:377, 4: Invalid argument name "me" (invalid-name)
C:409, 8: Invalid variable name "me" (invalid-name)
W:407,28: Unused argument 'argument' (unused-argument)
E:424,17: Argument 'corpus' passed by position and keyword in method call (redundant-keyword-arg)
E:425,21: Argument 'txt' passed by position and keyword in method call (redundant-keyword-arg)
C:430,85: Invalid variable name "f" (invalid-name)
C:434, 8: Invalid variable name "e" (invalid-name)
C:437, 8: Invalid variable name "e" (invalid-name)
C:457, 8: Invalid variable name "e" (invalid-name)
C:467, 8: Invalid variable name "e" (invalid-name)
C:480, 8: Invalid variable name "e" (invalid-name)
W:415,30: Unused argument 'button' (unused-argument)
C:490, 4: Missing method docstring (missing-docstring)
C:491,26: Invalid variable name "m" (invalid-name)
C:501,80: Invalid variable name "f" (invalid-name)
C:521,80: Invalid variable name "f" (invalid-name)
C:527, 8: Invalid variable name "me" (invalid-name)
R:542, 4: Method could be a function (no-self-use)
C:568, 4: Missing method docstring (missing-docstring)
W:568,37: Unused argument 'itera' (unused-argument)
W:568,50: Unused argument 'length' (unused-argument)
C:577, 4: Missing method docstring (missing-docstring)
E:613, 4: Method should have "self" as first argument (no-self-argument)
E:667,12: Value 'corpus' is unsubscriptable (unsubscriptable-object)
R:613, 4: Too many statements (51/50) (too-many-statements)
C:670, 4: Missing method docstring (missing-docstring)
E:670, 4: Method should have "self" as first argument (no-self-argument)
E:671, 8: Instance of 'FreeSpeech' has no 'begin_user_action' member (no-member)
E:672,15: Instance of 'FreeSpeech' has no 'get_text' member (no-member)
W:683,16: No exception type(s) specified (bare-except)
C:701, 4: Missing method docstring (missing-docstring)
C:714, 4: Missing method docstring (missing-docstring)
W:730, 8: Unused variable 'err' (unused-variable)
R:714, 4: Method could be a function (no-self-use)
W:735,27: Unused argument 'wreck' (unused-argument)
C:764, 4: Missing method docstring (missing-docstring)
W:768,19: Use of eval (eval-used)
C:796,15: Comparison should be search_back == None (misplaced-comparison-constant)
C:796,15: Comparison to None should be 'expr is None' (singleton-comparison)
C:813,15: Comparison should be search_back == None (misplaced-comparison-constant)
C:813,15: Comparison to None should be 'expr is None' (singleton-comparison)
C:825,11: Comparison should be search_back == None (misplaced-comparison-constant)
C:825,11: Comparison to None should be 'expr is None' (singleton-comparison)
C:836, 4: Invalid argument name "a" (invalid-name)
C:836, 4: Invalid argument name "b" (invalid-name)
C:836, 4: Invalid argument name "c" (invalid-name)
C:836, 4: Invalid argument name "d" (invalid-name)
C:836, 4: Missing method docstring (missing-docstring)
W:836,33: Unused argument 'd' (unused-argument)
W:836,24: Unused argument 'a' (unused-argument)
W:836,27: Unused argument 'b' (unused-argument)
W:836,30: Unused argument 'c' (unused-argument)
C:850,20: Invalid variable name "b" (invalid-name)
W:839,27: Unused argument 'command' (unused-argument)
C:866,11: Comparison should be search_back == None (misplaced-comparison-constant)
C:866,11: Comparison to None should be 'expr is None' (singleton-comparison)
C:869,11: Comparison should be search_back == None (misplaced-comparison-constant)
C:869,11: Comparison to None should be 'expr is None' (singleton-comparison)
R:863, 4: Method could be a function (no-self-use)
R: 91, 0: Too many public methods (43/20) (too-many-public-methods)
W:745, 8: Attribute 'bounds' defined outside __init__ (attribute-defined-outside-init)
W:841, 8: Attribute 'bounds' defined outside __init__ (attribute-defined-outside-init)
W:299,13: Attribute 'prefsdialog' defined outside __init__ (attribute-defined-outside-init)
W:371,16: Attribute 'cmds' defined outside __init__ (attribute-defined-outside-init)
W:389,16: Attribute 'cmds' defined outside __init__ (attribute-defined-outside-init)
W:776, 8: Attribute 'undo' defined outside __init__ (attribute-defined-outside-init)
W:244, 8: Attribute 'commands' defined outside __init__ (attribute-defined-outside-init)
W:493, 8: Attribute 'stop_listening' defined outside __init__ (attribute-defined-outside-init)
W:500,12: Attribute 'open_filename' defined outside __init__ (attribute-defined-outside-init)
W:509, 8: Attribute 'open_filename' defined outside __init__ (attribute-defined-outside-init)
W:517,16: Attribute 'open_filename' defined outside __init__ (attribute-defined-outside-init)
W:774, 8: Attribute 'open_filename' defined outside __init__ (attribute-defined-outside-init)
W:337, 8: Attribute 'commands_old' defined outside __init__ (attribute-defined-outside-init)
W:410, 8: Attribute 'commands_old' defined outside __init__ (attribute-defined-outside-init)
W:528, 8: Attribute 'commands_old' defined outside __init__ (attribute-defined-outside-init)
C:928, 8: Invalid attribute name "dialogFlags" (invalid-name)
E:899, 8: Instance of 'int' has no 'pack_start' member (no-member)
C:902, 4: Missing method docstring (missing-docstring)
C:919, 4: Missing method docstring (missing-docstring)
W:923, 4: Arguments number differs from overridden 'set_title' method (arguments-differ)
C:925, 4: Missing method docstring (missing-docstring)
C:927, 4: Missing method docstring (missing-docstring)
W:929, 4: Arguments number differs from overridden 'set_parent' method (arguments-differ)
W:931, 4: Arguments number differs from overridden 'get_title' method (arguments-differ)
C:933, 4: Missing method docstring (missing-docstring)
C:935, 4: Missing method docstring (missing-docstring)
W:938, 0: Method '__enter__' is abstract in class 'AudioSource' but is not overridden (abstract-method)
W:938, 0: Method '__exit__' is abstract in class 'AudioSource' but is not overridden (abstract-method)
R:944, 4: Too many arguments (10/5) (too-many-arguments)
R:944, 4: Too many local variables (27/15) (too-many-locals)
W:944, 4: Arguments number differs from overridden 'recognize_sphinx' method (arguments-differ)
E:947,38: Undefined variable 'AudioData' (undefined-variable)
E:968,18: Undefined variable 'RequestError' (undefined-variable)
E:970,18: Undefined variable 'RequestError' (undefined-variable)
E:972,18: Undefined variable 'RequestError' (undefined-variable)
E:976,18: Undefined variable 'RequestError' (undefined-variable)
E:982,18: Undefined variable 'RequestError' (undefined-variable)
E:988,18: Undefined variable 'RequestError' (undefined-variable)
E:990,38: Undefined variable 'CONF_FILES' (undefined-variable)
E:994,18: Undefined variable 'RequestError' (undefined-variable)
E:1011,17: Undefined variable 'PortableNamedTemporaryFile' (undefined-variable)
C:1011,52: Invalid variable name "f" (invalid-name)
C:1045,21: More than one statement on a single line (multiple-statements)
C:1049,35: More than one statement on a single line (multiple-statements)
E:1050,14: Undefined variable 'UnknownValueError' (undefined-variable)
R:944, 4: Too many branches (22/12) (too-many-branches)
R:944, 4: Too many statements (81/50) (too-many-statements)
C:1051, 0: Missing class docstring (missing-docstring)
R:1051, 0: Too few public methods (1/2) (too-few-public-methods)
C:1069, 4: Invalid constant name "app" (invalid-name)
W: 45, 0: Unused import time (unused-import)
W: 51, 0: Unused import UseXTest from wildcard import (unused-wildcard-import)
W: 51, 0: Unused import argp from wildcard import (unused-wildcard-import)
W: 51, 0: Unused import Xlib from wildcard import (unused-wildcard-import)
W: 51, 0: Unused import get_keysym from wildcard import (unused-wildcard-import)
W: 51, 0: Unused import is_shifted from wildcard import (unused-wildcard-import)
W: 51, 0: Unused import special_X_keysyms from wildcard import (unused-wildcard-import)
W: 51, 0: Unused import window from wildcard import (unused-wildcard-import)
W: 51, 0: Unused import char_to_keycode from wildcard import (unused-wildcard-import)
C: 45, 0: standard import "import subprocess, sys, textwrap, time" comes before "import codecs, json, os, platform, re, shutil, speech_recognition" (wrong-import-order)
C: 45, 0: standard import "import subprocess, sys, textwrap, time" comes before "import codecs, json, os, platform, re, shutil, speech_recognition" (wrong-import-order)
C: 45, 0: standard import "import subprocess, sys, textwrap, time" comes before "import codecs, json, os, platform, re, shutil, speech_recognition" (wrong-import-order)
C: 45, 0: standard import "import subprocess, sys, textwrap, time" comes before "import codecs, json, os, platform, re, shutil, speech_recognition" (wrong-import-order)


Report
======
691 statements analysed.

Statistics by type
------------------

+---------+-------+-----------+-----------+------------+---------+
|type     |number |old number |difference |%documented |%badname |
+=========+=======+===========+===========+============+=========+
|module   |1      |1          |=          |100.00      |0.00     |
+---------+-------+-----------+-----------+------------+---------+
|class    |4      |3          |+1.00      |75.00       |0.00     |
+---------+-------+-----------+-----------+------------+---------+
|method   |58     |54         |+4.00      |65.52       |0.00     |
+---------+-------+-----------+-----------+------------+---------+
|function |0      |0          |=          |0           |0        |
+---------+-------+-----------+-----------+------------+---------+



External dependencies
---------------------
::

    gi (freespeech)
      \-repository (freespeech)
    pocketsphinx (freespeech)
      \-pocketsphinx (freespeech)
    speech_recognition (freespeech)



Raw metrics
-----------

+----------+-------+------+---------+-----------+
|type      |number |%     |previous |difference |
+==========+=======+======+=========+===========+
|code      |784    |72.86 |654      |+130.00    |
+----------+-------+------+---------+-----------+
|docstring |145    |13.48 |92       |+53.00     |
+----------+-------+------+---------+-----------+
|comment   |88     |8.18  |90       |-2.00      |
+----------+-------+------+---------+-----------+
|empty     |59     |5.48  |52       |+7.00      |
+----------+-------+------+---------+-----------+



Duplication
-----------

+-------------------------+------+---------+-----------+
|                         |now   |previous |difference |
+=========================+======+=========+===========+
|nb duplicated lines      |0     |0        |=          |
+-------------------------+------+---------+-----------+
|percent duplicated lines |0.000 |0.000    |=          |
+-------------------------+------+---------+-----------+



Messages by category
--------------------

+-----------+-------+---------+-----------+
|type       |number |previous |difference |
+===========+=======+=========+===========+
|convention |264    |279      |-15.00     |
+-----------+-------+---------+-----------+
|refactor   |12     |7        |+5.00      |
+-----------+-------+---------+-----------+
|warning    |53     |49       |+4.00      |
+-----------+-------+---------+-----------+
|error      |23     |5        |+18.00     |
+-----------+-------+---------+-----------+



Messages
--------

+-------------------------------+------------+
|message id                     |occurrences |
+===============================+============+
|bad-whitespace                 |166         |
+-------------------------------+------------+
|invalid-name                   |39          |
+-------------------------------+------------+
|missing-docstring              |21          |
+-------------------------------+------------+
|line-too-long                  |18          |
+-------------------------------+------------+
|attribute-defined-outside-init |15          |
+-------------------------------+------------+
|unused-argument                |11          |
+-------------------------------+------------+
|undefined-variable             |11          |
+-------------------------------+------------+
|unused-wildcard-import         |8           |
+-------------------------------+------------+
|no-member                      |6           |
+-------------------------------+------------+
|singleton-comparison           |5           |
+-------------------------------+------------+
|misplaced-comparison-constant  |5           |
+-------------------------------+------------+
|wrong-import-order             |4           |
+-------------------------------+------------+
|no-self-use                    |4           |
+-------------------------------+------------+
|arguments-differ               |4           |
+-------------------------------+------------+
|broad-except                   |3           |
+-------------------------------+------------+
|wrong-import-position          |2           |
+-------------------------------+------------+
|unused-variable                |2           |
+-------------------------------+------------+
|too-many-statements            |2           |
+-------------------------------+------------+
|redundant-keyword-arg          |2           |
+-------------------------------+------------+
|no-self-argument               |2           |
+-------------------------------+------------+
|multiple-statements            |2           |
+-------------------------------+------------+
|fixme                          |2           |
+-------------------------------+------------+
|eval-used                      |2           |
+-------------------------------+------------+
|abstract-method                |2           |
+-------------------------------+------------+
|wildcard-import                |1           |
+-------------------------------+------------+
|unused-import                  |1           |
+-------------------------------+------------+
|unsubscriptable-object         |1           |
+-------------------------------+------------+
|too-many-public-methods        |1           |
+-------------------------------+------------+
|too-many-locals                |1           |
+-------------------------------+------------+
|too-many-lines                 |1           |
+-------------------------------+------------+
|too-many-instance-attributes   |1           |
+-------------------------------+------------+
|too-many-function-args         |1           |
+-------------------------------+------------+
|too-many-branches              |1           |
+-------------------------------+------------+
|too-many-arguments             |1           |
+-------------------------------+------------+
|too-few-public-methods         |1           |
+-------------------------------+------------+
|consider-iterating-dictionary  |1           |
+-------------------------------+------------+
|bare-except                    |1           |
+-------------------------------+------------+
|bad-indentation                |1           |
+-------------------------------+------------+



Global evaluation
-----------------
Your code has been rated at 3.57/10 (previous run: 3.99/10, -0.42)

